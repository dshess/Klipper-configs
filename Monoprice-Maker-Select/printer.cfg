[include mainsail.cfg]
[include fluidd.cfg]
[virtual_sdcard]
path: /home/pi/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[include macros.cfg]

# This file contains pin mappings and other appropriate default
# parameters for a Wanhao Duplicator i3 v2.1 and its clones (Monoprice
# Maker Select, Cocoon Create, etc.).
#
# This will probably work on older revisions (v1.0, v2.0) of the printer
# but is untested on those versions.

# Note, a number of Melzi boards are shipped with a bootloader that
# requires the following command to flash the board:
#  avrdude -p atmega1284p -c arduino -b 57600 -P /dev/ttyUSB0 -U out/klipper.elf.hex
# If the above command does not work and "make flash" does not work
# then one may need to flash a bootloader to the board - see the
# Klipper docs/Bootloaders.md file for more information.

# See docs/Config_Reference.md for a description of parameters.

# For best results with klipper and the Wanhao Duplicator i3, follow these
# guidelines:
#
# - Locate the USB serial port for your printer in /dev/serial/by-id/ format.
#   See https://www.klipper3d.org/FAQ.html#wheres-my-serial-port
#   It will be something like:
#   /dev/serial/by-id/usb-FTDI_FT232R_USB_UART_ABCD1234-if00-port0
#
# - Configure klipper to compile firmware for the AVR atmega1284p
#
# - At this point, "make flash FLASH_DEVICE=..." should successfully
#   flash your printer board. Use the /dev/serial/by-id/ format for
#   FLASH_DEVICE to ensure consistent results.
#   See https://www.klipper3d.org/FAQ.html#the-make-flash-command-doesnt-work
#   if you have problems.
#
# - Copy this sample file you are currently reading to ~/printer.cfg,
#   and customize the following parameters:
#   * [extruder] > rotation_distance
#
#     This is the inverse of "E steps" (extruder steps per mm) from the stock
#     Wanhao Repetier-based firmware.
#     (See https://3dprinterwiki.info/extruder-steps/ )
#
#   * [extruder] > PID parameters (pid_Kp, pid_Ki, pid_Kd)
#   * [heater_bed] > PID parameters (pid_Kp, pid_Ki, pid_Kd)
#
#     PID values from stock Wanhao firmware (Repetier) do not
#     translate directly to klipper. You will need to run klipper's
#     PID autotune function for the extruder and bed. After getting the
#     klipper firmware up and running, run the PID_CALIBRATE procedures
#     by sending these commands via octoprint terminal (one per autotune):
#
#        extruder:   PID_CALIBRATE HEATER=extruder TARGET=<temp>
#        heated bed: PID_CALIBRATE HEATER=heater_bed TARGET=<temp>
#
#     After the autotune process completes, PID parameter results
#     can be found in the Octoprint terminal tab (if you're quick)
#     or in /tmp/klippy.log.
#
#     Enter the PID parameters into the appropriate sections of ~/printer.cfg .
#
#   * [extruder] > max_temp
#   * [heater_bed] > max_temp
#
#     The max temps included in this printer config are limited to 230 for extruder
#     and 70 for heated bed. If your printer has been modified to handle higher temps
#     (like an upgraded hot end or a separate MOSFET for your heated bed), you may
#     want to increase these values.
#
#     Note: Some Melzi boards were shipped with 10K pullup resistors
#     instead of 4.7K. If the temperatures on your printer seem way
#     off before running the PID tune, you may need to add
#     "pullup_resistor: 10000" to both the extruder and the heater_bed
#     config sections.
#
#   * [mcu] > serial
#
#     Enter the USB serial port of the printer in /dev/serial/by-id/ format
#     for best results.
#
# - Power cycle the Wanhao Duplicator i3
#
# - Issue the command "RESTART" via the Octoprint terminal tab (similar to
#   how you would send a manual gcode command, but send the word RESTART).
#   This tells klipper to reload its config file and do an internal reset.
#   You should then see a status screen appear on the printer's LCD.
#
# - Be sure to follow these instructions before attempting any prints:
#   https://www.klipper3d.org/Config_checks.html

[bed_screws]
# SHESS: Inset by 10 because otherwise the heads get in the way.
screw1: 10, 10
screw2: 190, 10
screw3: 190, 175
screw4: 10, 175

[bed_mesh]
speed: 80
horizontal_move_z: 1
mesh_min: 10, 10
mesh_max: 190, 175
# SHESS: Avoiding the sticker for now.  Remove it?
#mesh_max: 190, 190
probe_count: 5, 5
mesh_pps: 2,2
fade_start: 1
fade_end: 10
fade_target: 0

[stepper_x]
step_pin: PD7
dir_pin: PC5
enable_pin: !PD6
microsteps: 16
rotation_distance: 40
endstop_pin: ^!PC2
position_endstop: 0
position_max: 200
homing_speed: 40

[stepper_y]
step_pin: PC6
dir_pin: PC7
enable_pin: !PD6
microsteps: 16
rotation_distance: 40
endstop_pin: ^!PC3
position_endstop: 0
position_max: 200
homing_speed: 40

[stepper_z]
step_pin: PB3
dir_pin: !PB2
enable_pin: !PA5
microsteps: 16
rotation_distance: 8
endstop_pin: ^!PC4
#position_endstop: 0
position_max: 180
# SHESS: For leveling.
position_min: -2
homing_speed: 2

# https://www.amazon.com/gp/product/B07Q5MKSLS/
# https://docs.ldomotors.com/en/guides/klipper-thermistor
[thermistor YOTINO-NTC100K-B3950]
temperature1: 25
resistance1: 103180
temperature2: 150
resistance2: 1366.2
temperature3: 250
resistance3: 168.6

[extruder]
step_pin: PB1
dir_pin: !PB0
enable_pin: !PD6
microsteps: 16
rotation_distance: 32.2422
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PD5
# SHESS: "NTC 100K thermistor 3950K beta A value".  I suspect this is wrong, but
# I'm not sure how to resolve it.  Different examples for wanhao printers show
# different settings, which seems obviously wrong.
#sensor_type: Generic 3950
sensor_type: YOTINO-NTC100K-B3950
# SHESS: Otherwise my board shows 40C as "room temp" when you start cold.
pullup_resistor: 10000
sensor_pin: PA7
#control: pid
#pid_Kp: 16.198460
#pid_Ki: 0.504625
#pid_Kd: 129.992642
min_temp: 0
# SHESS: All-metal hotend replaced the PTFE tube.
max_temp: 300
# For tuning.
max_extrude_only_distance: 101
# SHESS: The temp sensor sees a discontinuity when the heater goes from full
# power to off, or vice versa.  From on to off, it jumps 5C-7C, likewise falling
# when going from off to on.  I suspect a voltage bias when heater is on.
max_power: 0.800
# SHESS: Ellis tuning guide via Pattern Method.
# SHESS: I've moved the "real" settings to filament gcode.
pressure_advance: 0.032
pressure_advance: 0.026  # Polymaker ABS Black

[heater_bed]
heater_pin: PD4
sensor_type: Generic 3950
sensor_pin: PA6
# SHESS: Otherwise my board shows 40C as "room temp" when you start cold.
pullup_resistor: 10000
#control: pid
#pid_kp: 71.307
#pid_ki: 1.564
#pid_kd: 812.900
min_temp: 0
# SHESS: MOSFET mod should let this happen...
#max_temp: 70
max_temp: 110

[verify_heater heater_bed]
check_gain_time: 120

[verify_heater extruder]
check_gain_time: 60

[fan]
pin: PB4
# SHESS: With the round shroud it can get too much back pressure.
# Maybe DiiiCooler wouldn't have the issue.
max_power: 0.75

[mcu]
serial: /dev/serial/by-id/usb-FTDI_FT232R_USB_UART_AI03KDIU-if00-port0 
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 200
max_accel: 1000
max_z_velocity: 2
max_z_accel: 100

[display]
lcd_type: st7920
cs_pin: PC1
sclk_pin: PD3
sid_pin: PC0
encoder_pins: ^PA2, ^PA1
click_pin: ^!PA3
kill_pin: ^!PD2

[gcode_macro START_PRINT]
gcode:
    BED_MESH_PROFILE LOAD=default
    PRIME_LINE

[mcu rpi]
serial: /tmp/klipper_host_mcu

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

#[adxl345]
#cs_pin: rpi:None

#[resonance_tester]
#accel_chip: adxl345
#probe_points:
    #100, 100, 20  # Slightly above the middle of the bed.

[input_shaper]
shaper_freq_x: 32.2
shaper_type_x: mzv
shaper_freq_y: 24.6
shaper_type_y: mzv

[printer]
# SHESS:
# X: To avoid too much smoothing with 'mzv', suggested max_accel <= 3100 mm/sec^2
# Y: To avoid too much smoothing with 'mzv', suggested max_accel <= 1700 mm/sec^2
# These are probably mythical for my machine.
max_accel: 1500

# SHESS: Experiment with temp sensor on a nano.  This means I could
# run the existing sensor via the nano to test ground issue impact on the
# main control board.
#[mcu nano]
#serial = /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0
#restart_method: arduino

#[temperature_sensor G3950]
#sensor_pin: nano:PC3
##adc_voltage: 3.3
#sensor_type: Generic 3950

[exclude_object]

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 20.244
#*# pid_ki = 0.710
#*# pid_kd = 144.235
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 69.737
#*# pid_ki = 1.192
#*# pid_kd = 1019.902
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.100000, 0.020000, -0.035000, -0.010000, -0.060000
#*# 	-0.055000, -0.065000, -0.090000, -0.060000, -0.080000
#*# 	-0.050000, -0.075000, -0.130000, -0.115000, -0.120000
#*# 	-0.085000, -0.100000, -0.140000, -0.120000, -0.120000
#*# 	-0.080000, -0.070000, -0.110000, -0.080000, -0.085000
#*# tension = 0.2
#*# min_x = 10.0
#*# algo = lagrange
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 10.0
#*# x_count = 5
#*# max_y = 175.0
#*# mesh_x_pps = 2
#*# max_x = 190.0
#*#
#*# [stepper_z]
#*# position_endstop = -0.015
#*#
#*# [bed_mesh new]
#*# version = 1
#*# points =
#*# 	0.100000, 0.020000, -0.035000, -0.010000, -0.060000
#*# 	-0.055000, -0.065000, -0.090000, -0.060000, -0.080000
#*# 	-0.050000, -0.075000, -0.130000, -0.115000, -0.120000
#*# 	-0.085000, -0.100000, -0.140000, -0.120000, -0.120000
#*# 	-0.080000, -0.070000, -0.110000, -0.080000, -0.085000
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 10.0
#*# max_x = 190.0
#*# min_y = 10.0
#*# max_y = 175.0
